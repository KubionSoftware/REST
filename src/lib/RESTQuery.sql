DECLARE @TABLE_CATALOG varchar(256) = '';
DECLARE @TABLE_SCHEMA varchar(256) = '';
DECLARE @TABLE_NAME varchar(256) = '';

IF OBJECT_ID('tempdb.dbo.#TempTableRelatesTableColumns', 'U') IS NOT NULL 
	DROP TABLE #TempTableRelatesTableColumns

CREATE TABLE #TempTableRelatesTableColumns(
	maintable VARCHAR(256) ,
	constraint_name VARCHAR(256) ,
	ChildTable VARCHAR(256) ,
	ChildTable_column_name VARCHAR(256) ,
	ParentTable VARCHAR(256) ,
	ParentTable_column_name VARCHAR(256) ,
	path VARCHAR(1500),
	secondlevel VARCHAR(256),
	hlevel int
)  

IF @TABLE_NAME='' 
begin
	DECLARE db_cursor CURSOR FOR 
	SELECT
		TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME
	FROM
		INFORMATION_SCHEMA.TABLES 
		where TABLE_TYPE='BASE TABLE';
	print 'then'
end
ELSE
begin
	DECLARE db_cursor CURSOR FOR 
	select @TABLE_CATALOG,@TABLE_SCHEMA,@TABLE_NAME
	print 'else'
end

OPEN db_cursor  
FETCH NEXT FROM db_cursor INTO @TABLE_CATALOG, @TABLE_SCHEMA, @TABLE_NAME

WHILE @@FETCH_STATUS = 0  
BEGIN  
	
		Declare @starttime datetime
		Declare @endtime datetime
		set @starttime=getdate()

		;WITH ParChi AS
		(

		SELECT 
			CR.CONSTRAINT_NAME [constraint_name] 
			,CR.TABLE_NAME as ChildTable
			,KCUR.COLUMN_NAME [ChildTable_column_name] 
			,C2R.TABLE_NAME [ParentTable] 
			,KCU2R.COLUMN_NAME [ParentTable_column_name]
			, cast(C2R.TABLE_NAME+'.'+CR.TABLE_NAME as varchar(1500)) path
			, cast(CR.TABLE_NAME as varchar(250)) SecondLevel
			, 0 as hlevel

		FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS CR
				INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCUR 
					ON CR.CONSTRAINT_SCHEMA = KCUR.CONSTRAINT_SCHEMA 
					AND CR.CONSTRAINT_NAME = KCUR.CONSTRAINT_NAME 
				INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS RCR
					ON CR.CONSTRAINT_SCHEMA = RCR.CONSTRAINT_SCHEMA 
					AND CR.CONSTRAINT_NAME = RCR.CONSTRAINT_NAME 
				INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS C2R 
					ON RCR.UNIQUE_CONSTRAINT_SCHEMA = C2R.CONSTRAINT_SCHEMA 
					AND RCR.UNIQUE_CONSTRAINT_NAME = C2R.CONSTRAINT_NAME 
				INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU2R
					ON C2R.CONSTRAINT_SCHEMA = KCU2R.CONSTRAINT_SCHEMA 
					AND C2R.CONSTRAINT_NAME = KCU2R.CONSTRAINT_NAME 
					AND KCUR.ORDINAL_POSITION = KCU2R.ORDINAL_POSITION 
		WHERE  CR.CONSTRAINT_TYPE = 'FOREIGN KEY' and C2R.TABLE_NAME=@TABLE_NAME
			union all
		SELECT 
			CL.CONSTRAINT_NAME [constraint_name] 
			,CL.TABLE_NAME as ChildTable
			,KCUL.COLUMN_NAME [ChildTable_column_name] 
			,C2L.TABLE_NAME ParentTable 
			,KCU2L.COLUMN_NAME [ParentTable_column_name]
			, cast(m.path+'.'+CL.TABLE_NAME as varchar(1500))
			, cast(m.SecondLevel as varchar(250)) as secondlevel
			, m.hlevel-1 as hlevel

		FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS CL
				INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCUL
					ON CL.CONSTRAINT_SCHEMA = KCUL.CONSTRAINT_SCHEMA 
					AND CL.CONSTRAINT_NAME = KCUL.CONSTRAINT_NAME 
				INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS RCL
					ON CL.CONSTRAINT_SCHEMA = RCL.CONSTRAINT_SCHEMA 
					AND CL.CONSTRAINT_NAME = RCL.CONSTRAINT_NAME 
				INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS C2L
					ON RCL.UNIQUE_CONSTRAINT_SCHEMA = C2L.CONSTRAINT_SCHEMA 
					AND RCL.UNIQUE_CONSTRAINT_NAME = C2L.CONSTRAINT_NAME 
				INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU2L
					ON C2L.CONSTRAINT_SCHEMA = KCU2L.CONSTRAINT_SCHEMA 
					AND C2L.CONSTRAINT_NAME = KCU2L.CONSTRAINT_NAME 
					AND KCUL.ORDINAL_POSITION = KCU2L.ORDINAL_POSITION 
		INNER JOIN ParChi m 
		ON C2L.TABLE_NAME=m.ChildTable
		WHERE  CL.CONSTRAINT_TYPE = 'FOREIGN KEY'
		), 
		parchiup as (

		SELECT 
			CR.CONSTRAINT_NAME [constraint_name] 
			,CR.TABLE_NAME as ChildTable
			,KCUR.COLUMN_NAME [ChildTable_column_name] 
			,C2R.TABLE_NAME [ParentTable] 
			,KCU2R.COLUMN_NAME [ParentTable_column_name]
			,cast(CR.TABLE_NAME+'.'+C2R.TABLE_NAME as varchar(1500)) path
			, cast(C2R.TABLE_NAME as varchar(250)) as secondlevel
			, 1 as hlevel

		FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS CR
				INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCUR 
					ON CR.CONSTRAINT_SCHEMA = KCUR.CONSTRAINT_SCHEMA 
					AND CR.CONSTRAINT_NAME = KCUR.CONSTRAINT_NAME 
				INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS RCR
					ON CR.CONSTRAINT_SCHEMA = RCR.CONSTRAINT_SCHEMA 
					AND CR.CONSTRAINT_NAME = RCR.CONSTRAINT_NAME 
				INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS C2R 
					ON RCR.UNIQUE_CONSTRAINT_SCHEMA = C2R.CONSTRAINT_SCHEMA 
					AND RCR.UNIQUE_CONSTRAINT_NAME = C2R.CONSTRAINT_NAME 
				INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU2R
					ON C2R.CONSTRAINT_SCHEMA = KCU2R.CONSTRAINT_SCHEMA 
					AND C2R.CONSTRAINT_NAME = KCU2R.CONSTRAINT_NAME 
					AND KCUR.ORDINAL_POSITION = KCU2R.ORDINAL_POSITION 
		WHERE  CR.CONSTRAINT_TYPE = 'FOREIGN KEY' and CR.TABLE_NAME=@TABLE_NAME
		UNION ALL

		SELECT 
			C.CONSTRAINT_NAME [constraint_name] 
			,C.TABLE_NAME as ChildTable
			,KCU.COLUMN_NAME [ChildTable_column_name] 
			,C2.TABLE_NAME ParentTable 
			,KCU2.COLUMN_NAME [ParentTable_column_name]
			, cast(m.path+'.'+C2.TABLE_NAME as varchar(1500))
			, cast(m.SecondLevel as varchar(250)) as secondlevel
			, m.hlevel+1 as hlevel

		FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS C
				INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU
					ON C.CONSTRAINT_SCHEMA = KCU.CONSTRAINT_SCHEMA 
					AND C.CONSTRAINT_NAME = KCU.CONSTRAINT_NAME 
				INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS RC
					ON C.CONSTRAINT_SCHEMA = RC.CONSTRAINT_SCHEMA 
					AND C.CONSTRAINT_NAME = RC.CONSTRAINT_NAME 
				INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS C2
					ON RC.UNIQUE_CONSTRAINT_SCHEMA = C2.CONSTRAINT_SCHEMA 
					AND RC.UNIQUE_CONSTRAINT_NAME = C2.CONSTRAINT_NAME 
				INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU2
					ON C2.CONSTRAINT_SCHEMA = KCU2.CONSTRAINT_SCHEMA 
					AND C2.CONSTRAINT_NAME = KCU2.CONSTRAINT_NAME 
					AND KCU.ORDINAL_POSITION = KCU2.ORDINAL_POSITION 
		INNER JOIN ParChiup m 
		ON C.TABLE_NAME=m.ParentTable
		WHERE  C.CONSTRAINT_TYPE = 'FOREIGN KEY'

		)
		insert into #TempTableRelatesTableColumns
			(maintable,
			constraint_name,
			ChildTable,
			ChildTable_column_name,
			ParentTable,
			ParentTable_column_name,
			path,
			secondlevel,
			hlevel)
		SELECT distinct 
			@TABLE_NAME maintable, [constraint_name] 
			,ChildTable
			,[ChildTable_column_name] 
			,ParentTable 
			,[ParentTable_column_name]
			,path
			,SecondLevel
			,hlevel
		-- childtable, hlevel 
		FROM ParChi
		union 
		SELECT distinct 
			@TABLE_NAME maintable, [constraint_name] 
			,ChildTable
			,[ChildTable_column_name] 
			,ParentTable 
			,[ParentTable_column_name]
			,path
			,secondlevel
			,hlevel
		-- childtable, hlevel 
		FROM parchiup
		order by hlevel desc
		option (maxrecursion 100)

		set @endtime=getdate()

		print datediff(ms,@starttime,@endtime)

	FETCH NEXT FROM db_cursor INTO @TABLE_CATALOG, @TABLE_SCHEMA, @TABLE_NAME
END 

CLOSE db_cursor  
DEALLOCATE db_cursor 

select * from #TempTableRelatesTableColumns order by maintable